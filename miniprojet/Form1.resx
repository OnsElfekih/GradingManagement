<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        A8C9e/8P7hvKN6OQL9AAAAAASUVORK5CYII=
</value>
  </data>
</root>